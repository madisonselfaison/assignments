{"ast":null,"code":"var _jsxFileName = \"/home/madcoder/development/assignments/level3/name-badge/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Form from \"./components/Form\";\nimport Badge from \"./components/Badge\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App(props) {\n  _s();\n  const [badgeList, setBadgeList] = React.useState([{\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    birthPlace: \"\",\n    phone: \"\",\n    favoriteFood: \"\"\n  }]);\n  const [showBadge, setShowBadge] = React.useState(false);\n\n  // const listOfBadges = badgeList.map((person, index) => <Badge\n  //     key={index+person}\n  //     firstName={person.firstName}\n  //     lastName={person.lastName}\n  //     email={person.email}\n  //     birthPlace={person.birthPlace}\n  //     phone={person.phone}\n  //     favoriteFood={person.favoriteFood}\n  //     comments={person.comments}\n  //     />)\n\n  const addItemToList = newBadgeEntry => {\n    setBadgeList(prevList => [...prevList, newBadgeEntry]);\n    setShowBadge(true);\n    const listOfBadges = badgeList.map((person, index) => /*#__PURE__*/_jsxDEV(Badge, {\n      firstName: person.firstName,\n      lastName: person.lastName,\n      email: person.email,\n      birthPlace: person.birthPlace,\n      phone: person.phone,\n      favoriteFood: person.favoriteFood,\n      comments: person.comments\n    }, index + person, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 63\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      addItemToList: addItemToList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), showBadge && listOfBadges]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QvKH/sHRQxEKt0D7/Hvmas9fxSo=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Form","Badge","App","props","badgeList","setBadgeList","useState","firstName","lastName","email","birthPlace","phone","favoriteFood","showBadge","setShowBadge","addItemToList","newBadgeEntry","prevList","listOfBadges","map","person","index","comments"],"sources":["/home/madcoder/development/assignments/level3/name-badge/src/App.js"],"sourcesContent":["import React from \"react\"\nimport Form from \"./components/Form\"\nimport Badge from \"./components/Badge\"\n\nexport default function App(props){\n  const [badgeList, setBadgeList] = React.useState([\n    {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      birthPlace: \"\",\n      phone: \"\",\n      favoriteFood: \"\"\n    }\n  ])\n\n  const [showBadge, setShowBadge] = React.useState(false)\n\n  // const listOfBadges = badgeList.map((person, index) => <Badge\n  //     key={index+person}\n  //     firstName={person.firstName}\n  //     lastName={person.lastName}\n  //     email={person.email}\n  //     birthPlace={person.birthPlace}\n  //     phone={person.phone}\n  //     favoriteFood={person.favoriteFood}\n  //     comments={person.comments}\n  //     />)\n\n      const addItemToList = (newBadgeEntry) => {\n        setBadgeList(prevList=> [... prevList, newBadgeEntry])\n        setShowBadge(true)\n        const listOfBadges = badgeList.map((person, index) => <Badge\n        key={index+person}\n        firstName={person.firstName}\n        lastName={person.lastName}\n        email={person.email}\n        birthPlace={person.birthPlace}\n        phone={person.phone}\n        favoriteFood={person.favoriteFood}\n        comments={person.comments}\n        />)\n      }\n\n  return(\n    <div>\n        <Form addItemToList={addItemToList} />\n        {showBadge && listOfBadges}\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AAAA;AAEtC,eAAe,SAASC,GAAG,CAACC,KAAK,EAAC;EAAA;EAChC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAAC,CAC/C;IACEC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,UAAU,EAAE,EAAE;IACdC,KAAK,EAAE,EAAE;IACTC,YAAY,EAAE;EAChB,CAAC,CACF,CAAC;EAEF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,KAAK,CAACO,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEI,MAAMS,aAAa,GAAIC,aAAa,IAAK;IACvCX,YAAY,CAACY,QAAQ,IAAG,CAAC,GAAIA,QAAQ,EAAED,aAAa,CAAC,CAAC;IACtDF,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMI,YAAY,GAAGd,SAAS,CAACe,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAAK,QAAC,KAAK;MAE5D,SAAS,EAAED,MAAM,CAACb,SAAU;MAC5B,QAAQ,EAAEa,MAAM,CAACZ,QAAS;MAC1B,KAAK,EAAEY,MAAM,CAACX,KAAM;MACpB,UAAU,EAAEW,MAAM,CAACV,UAAW;MAC9B,KAAK,EAAEU,MAAM,CAACT,KAAM;MACpB,YAAY,EAAES,MAAM,CAACR,YAAa;MAClC,QAAQ,EAAEQ,MAAM,CAACE;IAAS,GAPrBD,KAAK,GAACD,MAAM;MAAA;MAAA;MAAA;IAAA,QAQf,CAAC;EACL,CAAC;EAEL,oBACE;IAAA,wBACI,QAAC,IAAI;MAAC,aAAa,EAAEL;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG,EACrCF,SAAS,IAAIK,YAAY;EAAA;IAAA;IAAA;IAAA;EAAA,QACxB;AAEV;AAAC,GA9CuBhB,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module"}